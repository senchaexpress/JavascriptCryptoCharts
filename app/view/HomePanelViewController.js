/*
 * File: app/view/HomePanelViewController.js
 *
 * This file was generated by Sencha Architect version 4.2.9.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 7.3.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 7.3.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Demo.view.HomePanelViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.homepanel',

    updateUI: function(startDate, endDate) {
        console.log(startDate, endDate);
        if(!startDate || !endDate){
            startDate = '2020-01-01';
            endDate = '2020-12-31';
        }
        if(this.isVaildPeriod(startDate, endDate)) {
            var mycandlestickchart = Ext.ComponentQuery.query('#mycandlestickchart')[0];
            var store = mycandlestickchart.getStore();

            store.proxy.extraParams.start_date = startDate;
            store.proxy.extraParams.end_date = endDate;

            store.load({
                scope:this,
                callback: function(records, operation, success) {
                    console.log("records", records);
                    store.setData(records);
                    console.log("getData", store.getData());

                }
            });
        }


    },

    isVaildPeriod: function(startDate, endDate) {
        startDate = new Date(startDate);
        endDate = new Date(endDate);

        if(startDate.getTime() > endDate.getTime()) {
            var temp = endDate;
            endDate = startDate;
            startDate = temp;
        }

        console.log("endDate - startDate", endDate - startDate);

        var days = Math.round((endDate - startDate) / (24 * 3600 * 1000));
        console.log("days", days);
        if(days > 365 || days === 0) {
            Ext.Msg.alert('Alert', 'You can see only for a year(365days)', Ext.emptyFn);
            return false;
        } else {
            return true;
        }
    },

    onRefreshBtnClick: function(button, e, eOpts) {
        var fromDatePicker = Ext.ComponentQuery.query('#fromDatePicker')[0];
        var fromDate = fromDatePicker.value;

        var toDatePicker = Ext.ComponentQuery.query('#toDatePicker')[0];
        var toDate = toDatePicker.value;

        if(fromDate && toDate) {
            fromDate = new Date(fromDate);
            toDate = new Date(toDate);

            if(fromDate > toDate) {
                var temp = toDate;
                toDate = fromDate;
                fromDate = temp;
            }

            fromDate = Ext.Date.format(fromDate, 'Y-m-d');
            toDate = Ext.Date.format(toDate, 'Y-m-d');

            this.updateUI(fromDate, toDate);
        }
    },

    onPanelAfterRender: function(component, eOpts) {
        this.updateUI();
    }

});
